% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_for_timeline.R
\name{prepare_for_timeline}
\alias{prepare_for_timeline}
\title{Prepares sda_target-type data for timeline plot}
\usage{
prepare_for_timeline(
  sda_target_data,
  sector_filter = c("automotive", "aviation", "cement", "oil and gas", "shipping",
    "steel", "power"),
  year_start = 0,
  year_end = Inf,
  column_line_names = "emission_factor_metric",
  value_to_plot = "emission_factor_value",
  extrapolate_missing_values = FALSE
)
}
\arguments{
\item{sda_target_data}{Dataframe with columns sector, year and two other
columns specifying value to be be plotted as timelines and line names
(dataframe).}

\item{sector_filter}{Sector to be used for filtering (character string or a
vector of character strings).}

\item{year_start}{Start year of the plot (double).}

\item{year_end}{End year of the plot (double).}

\item{column_line_names}{Column specifying the names of lines to be plotted
(character string).}

\item{value_to_plot}{Column name of the value to be plotted (character
string).}

\item{extrapolate_missing_values}{Flag indicating if values should be
extrapolated to match the furthest value in the data set.}
}
\value{
Dataframe with columns: year, line_name, value, extrapolated.
}
\description{
Prepares sda_target-type data for timeline plot
}
\examples{
prepare_for_timeline(sda_target,
sector_filter = "cement",
year_start = 2020,
year_end = 2050,column_line_names = "emission_factor_metric",
value_to_plot = "emission_factor_value",
extrapolate_missing_values = TRUE)
}
