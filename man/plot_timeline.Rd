% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_timeline.R
\name{plot_timeline}
\alias{plot_timeline}
\title{Create a time line plot}
\usage{
plot_timeline(data, lines_specs = NULL)
}
\arguments{
\item{data}{Pre-processed data for the chart, with columns: year, value,
line_name.}

\item{lines_specs}{Dataframe containing order of lines, their labels and
(optionally) colour names from the r2dii_colours palette (column
'r2dii_colour_name').}
}
\value{
An object of class "ggplot".
}
\description{
Create a time line plot
}
\examples{
library(ggplot2)

data <- sda_target

# You may prepare and plot an sda_target-like dataset using defaults
data \%>\%
  prepare_for_timeline() \%>\%
  plot_timeline()

# Or use custom values passed to a number of arguments
cement_data <- data \%>\%
  prepare_for_timeline(
    sector_filter = "cement",
    year_start = 2020,
    year_end = 2050,
    column_line_names = "emission_factor_metric",
    value_to_plot = "emission_factor_value",
    extrapolate_missing_values = FALSE
  )

lines_specs <- dplyr::tibble(
  line_name = c(
    "projected",
    "corporate_economy",
    "target_demo",
    "adjusted_scenario_demo"
  ),
  label = c(
    "Projected",
    "Corporate Economy",
    "Target Demo",
    "Adjusted Scenario Demo"
  ),
  r2dii_colour_name = c("dark_blue", "green", "grey", "orange")
)

p <- plot_timeline(cement_data, lines_specs = lines_specs)
p

# Customize with ggplot2 as usual
p + labs(title = "Emission intensity trend for Cement")
}
