% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_timeline.R
\name{plot_timeline}
\alias{plot_timeline}
\title{Creates a time line plot}
\usage{
plot_timeline(data, specs = timeline_specs(data))
}
\arguments{
\item{data}{Pre-processed data for the chart, with columns: year, value,
line_name.}

\item{specs}{Dataframe containing order of lines, their labels and colour
names from the r2dii_colours palette.}
}
\value{
An object of class "ggplot".
}
\description{
Creates a time line plot
}
\examples{
library(ggplot2)
library(dplyr)

# Using default preparation and specs
data <- prepare_for_timeline(sda_target)
p <- plot_timeline(data)
p

# Customize as usual with ggplot2
custom <- c("red", "blue")
p +
  scale_colour_manual(values = custom) +
  labs(title = "Time line plot")

# Using custom preparation and specs
cement_data <- sda_target \%>\%
  prepare_for_timeline(
    sector_filter = "cement",
    year_start = 2020,
    year_end = 2050,
    column_line_names = "emission_factor_metric",
    value_to_plot = "emission_factor_value",
    extrapolate_missing_values = TRUE
  )

# Combine `timeline_specs()` and `dput()` or `datapasta::tribble_paste()` to
# produce the default `specs`; then adapt it as you wish:
custom_specs <- tribble(
  ~line_name, ~label, ~colour_hex,
  "projected", "Proj.", "#1b324f",
  "corporate_economy", "Corp. Economy", "#00c082",
  "target_demo", "Target", "#ff9623",
  "adjusted_scenario_demo", "Adj. Scenario", "#d0d7e1"
)

# For reference
r2dii_palette_colours()

plot_timeline(cement_data, specs = custom_specs)
}
\seealso{
timeline_specs
}
