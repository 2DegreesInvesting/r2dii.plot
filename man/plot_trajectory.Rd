% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_trajectory.R
\name{plot_trajectory}
\alias{plot_trajectory}
\title{Create a trajectory alignment chart in a ggplot object}
\usage{
plot_trajectory(
  data,
  plot_title = "",
  x_title = "",
  y_title = "",
  annotate_data = FALSE,
  scenario_specs_good_to_bad,
  main_line_metric,
  additional_line_metrics = data.frame()
)
}
\arguments{
\item{data}{Filtered input data (dataframe with columns: year, metric_type,
metric and value).}

\item{plot_title}{Title of the plot (character string).}

\item{x_title, y_title}{Title of the x- and y-axis (character string).}

\item{annotate_data}{Flag indicating whether the data should be annotated
(boolean).}

\item{scenario_specs_good_to_bad}{Dataframe containing scenario
specifications like color or label, ordered from the most to least
sustainable (dataframe with columns: scenario, label, color).}

\item{main_line_metric}{Dataframe containing information about metric that
should be plotted as the main line (dataframe with columns: metric, label).}

\item{additional_line_metrics}{Dataframe containing information about
additional metrics that should be plotted as lines (dataframe with columns:
metric, label).}
}
\description{
The function returns a ggplot object containing a stacked bar chart showing a
technology mix for different categories (portfolio, scenario, benchmark,
etc.).
}
\examples{
data <- prepare_for_trajectory_chart(
  process_input_data(get_example_data()),
  sector_filter = "power",
  technology_filter = "renewablescap",
  region_filter = "global",
  scenario_source_filter = "demo_2020",
  value_name = "production"
)

scenario_specs <- dplyr::tibble(
  scenario = c("sds", "sps", "cps", "worse"),
  color = c("#9CAB7C", "#FFFFCC", "#FDE291", "#E07B73"),
  label = c("SDS", "STEPS", "CPS", "worse")
)

main_line_metric <- dplyr::tibble(metric = "projected", label = "Portfolio")

additional_line_metrics <- dplyr::tibble(
  metric = "corporate_economy",
  label = "Corporate Economy"
)

plot_trajectory(data,
  scenario_specs_good_to_bad = scenario_specs,
  main_line_metric = main_line_metric
)
}
