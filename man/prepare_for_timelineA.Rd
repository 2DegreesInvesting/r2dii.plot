% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_for_timeline.R
\name{prepare_for_timelineA}
\alias{prepare_for_timelineA}
\alias{prepare_for_timelineB}
\title{Prepares sda_target-type data for timeline plot}
\usage{
prepare_for_timelineA(
  sda_target_data,
  sector_filter = c("automotive", "aviation", "cement", "oil and gas", "shipping",
    "steel", "power"),
  year_start = 0,
  year_end = Inf,
  column_line_names = "emission_factor_metric",
  value_to_plot = "emission_factor_value",
  extrapolate_missing_values = FALSE
)

prepare_for_timelineB(data, extrapolate = FALSE)
}
\arguments{
\item{sector_filter}{Sector to be used for filtering (character string of
length 1). One of automotive, aviation, cement, oil and gas, shipping, steel, power)```.}

\item{year_start}{Start year of the plot (double).}

\item{year_end}{End year of the plot (double).}

\item{column_line_names}{Column specifying the names of lines to be plotted
(character string).}

\item{value_to_plot}{Column name of the value to be plotted (character
string).}

\item{data, sda_target_data}{Dataframe with columns sector, year and two other
columns specifying value to be be plotted as timelines and line names
(dataframe).}

\item{extrapolate, extrapolate_missing_values}{Flag indicating if values
should be extrapolated to match the furthest value in the data set.}
}
\value{
Dataframe with columns: year, line_name, value, extrapolated.
}
\description{
Prepares sda_target-type data for timeline plot
}
\examples{
# prepare_for_timelineA() --------------------------------------------------

data <- sda_target
prepare_for_timelineA(
  data,
  sector_filter = "cement",
  year_start = 2020,
  year_end = 2050, column_line_names = "emission_factor_metric",
  value_to_plot = "emission_factor_value",
  extrapolate_missing_values = TRUE
)

# prepare_for_timelineA() --------------------------------------------------

data <- sda_target
tail(prepare_for_timelineB(data))
tail(prepare_for_timelineB(data, extrapolate = TRUE))
}
